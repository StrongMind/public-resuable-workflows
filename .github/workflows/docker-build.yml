name: Build docker and Upload to ECR

on:
  workflow_call:
    inputs:
      test_docker_run_extra_params:
        description: List of extra params to pass to docker run (for things like environment variables that are required to start)
        required: false
        type: string
        default: ""
      test_docker_timeout:
        description: Number of seconds to wait for docker to start
        required: false
        type: number
        default: 15
      skip_test_docker:
        description: Skip testing the dockerfile
        required: false
        type: boolean
        default: false

env:
  AWS_REGION: us-west-2

permissions:
  contents: read

jobs:
  test-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      if: ${{ !inputs.skip_test_docker }}
      - name: Test docker
        run: |
          docker build -t test-docker .
          CONTAINER_ID=$(docker run ${{ inputs.test_docker_run_extra_params }} -d test-docker)
          echo "Starting docker container $CONTAINER_ID and waiting for ${{ inputs.test_docker_timeout }} seconds"
          sleep ${{ inputs.test_docker_timeout }}
          OUTPUT=$(docker logs $CONTAINER_ID --tail 20)

          if [[ $OUTPUT != *"Listening on http://0.0.0.0:3000"* ]]; then
            echo "Dockerfile test failed"
            echo $OUTPUT
            exit 1
          fi
  build-image:
    name: Build image
    needs: test-docker
    runs-on: ubuntu-latest
    environment: containers

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.STRONGMIND_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.STRONGMIND_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: no

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create private repo
      uses: int128/create-ecr-repository-action@v1
      with:
        repository: ${{ github.event.repository.name }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ github.event.repository.name }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG